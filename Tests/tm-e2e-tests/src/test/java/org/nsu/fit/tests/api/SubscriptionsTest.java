package org.nsu.fit.tests.api;

import io.qameta.allure.Feature;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.nsu.fit.services.rest.RestClient;
import org.nsu.fit.services.rest.data.*;
import org.testng.annotations.Test;

public class SubscriptionsTest {
    private RestClient restClient;
    private SubscriptionPojo subscriptionPojo;
    private AccountTokenPojo authenticateCustomer;

    @Test(description = "Create subscription.")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Subscription feature.")
    public void createSubscriptionTest() {
        restClient = new RestClient();
        AccountTokenPojo adminToken = restClient.authenticate("admin", "setup");

        ContactPojo customerPojo = restClient.createAutoGeneratedCustomer(adminToken);

        authenticateCustomer = restClient.authenticate(customerPojo.login, customerPojo.password);

        PlanPojo newPlanPojo = new PlanPojo();
        newPlanPojo.details = "details";
        newPlanPojo.name = "name";
        newPlanPojo.fee = 5;

        PlanPojo planPojo = restClient.createPlan(newPlanPojo, adminToken);

        SubscriptionPojo newSubscriptionPojo = new SubscriptionPojo();
        newSubscriptionPojo.id = authenticateCustomer.id;
        newSubscriptionPojo.planId = planPojo.id;

        subscriptionPojo = restClient.createSubscription(newSubscriptionPojo, authenticateCustomer);
    }

    @Test(description = "Delete subscription.", dependsOnMethods = "createSubscriptionTest")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Subscription feature.")
    public void deleteSubscriptionTest() {
        restClient.deleteSubscription(subscriptionPojo, authenticateCustomer);
    }
}
